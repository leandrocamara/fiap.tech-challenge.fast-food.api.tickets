{
	"info": {
		"_postman_id": "d8d49dcb-465e-4f0b-ac72-6f4b23682e2b",
		"name": "FIAP.FastFood",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1643480"
	},
	"item": [
		{
			"name": "1 - Create Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Response\", function () {\r",
							"    const statusCode = 201;\r",
							"    pm.expect(pm.response.code).to.eql(statusCode);\r",
							"\r",
							"    const product = pm.response.json();\r",
							"    pm.collectionVariables.set(\"productId\", product.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Soda Italiana\",\r\n    \"category\": 2,\r\n    \"price\": 14.9,\r\n    \"description\": \"Bebida gaseificada e xarope de fruta\",\r\n    \"images\": [\r\n        \"url\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{orders}}/api/products",
					"host": [
						"{{orders}}"
					],
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "2 - Create Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Response\", function () {\r",
							"    const statusCode = 201;\r",
							"    pm.expect(pm.response.code).to.eql(statusCode);\r",
							"\r",
							"    const customer = pm.response.json();\r",
							"    pm.collectionVariables.set(\"customerId\", customer.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cpf\": \"90296682020\",\r\n    \"name\": \"Jo√£o\",\r\n    \"email\": \"joao@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{orders}}/api/customers",
					"host": [
						"{{orders}}"
					],
					"path": [
						"api",
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "3 - Get Products by Category",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{orders}}/api/products?categoryId=2",
					"host": [
						"{{orders}}"
					],
					"path": [
						"api",
						"products"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4 - Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Response\", function () {\r",
							"    const statusCode = 201;\r",
							"    pm.expect(pm.response.code).to.eql(statusCode);\r",
							"\r",
							"    const order = pm.response.json();\r",
							"    pm.collectionVariables.set(\"orderId\", order.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderItems\": [\r\n        {\r\n            \"productId\": \"{{productId}}\",\r\n            \"quantity\": 3\r\n        }\r\n    ],\r\n    \"customerId\": \"{{customerId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{orders}}/api/orders",
					"host": [
						"{{orders}}"
					],
					"path": [
						"api",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "5 - Get Payment by OrderId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Response\", function () {\r",
							"    const statusCode = 200;\r",
							"    pm.expect(pm.response.code).to.eql(statusCode);\r",
							"\r",
							"    const payment = pm.response.json();\r",
							"    pm.collectionVariables.set(\"paymentId\", payment.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{payments}}/api/payments?orderId={{orderId}}",
					"host": [
						"{{payments}}"
					],
					"path": [
						"api",
						"payments"
					],
					"query": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "6 - Update Payment Status",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{payments}}/api/payments/{{paymentId}}/status/{{paid}}",
					"host": [
						"{{payments}}"
					],
					"path": [
						"api",
						"payments",
						"{{paymentId}}",
						"status",
						"{{paid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "7 - Get Ongoing Orders",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{orders}}/api/orders/ongoing",
					"host": [
						"{{orders}}"
					],
					"path": [
						"api",
						"orders",
						"ongoing"
					]
				}
			},
			"response": []
		},
		{
			"name": "8 - Update Ticket Status",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{tickets}}/api/tickets/<TICKET_ID>/status",
					"host": [
						"{{tickets}}"
					],
					"path": [
						"api",
						"tickets",
						"<TICKET_ID>",
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "9 - Update Order Status",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{orders}}/api/orders/{{orderId}}/status/{{completed}}",
					"host": [
						"{{orders}}"
					],
					"path": [
						"api",
						"orders",
						"{{orderId}}",
						"status",
						"{{completed}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "10 - Get Order",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{orders}}/api/orders/{{orderId}}",
					"host": [
						"{{orders}}"
					],
					"path": [
						"api",
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "orders",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "payments",
			"value": "http://localhost:5001",
			"type": "string"
		},
		{
			"key": "tickets",
			"value": "http://localhost:5002",
			"type": "string"
		},
		{
			"key": "productId",
			"value": "Defined in Create Product (1)"
		},
		{
			"key": "customerId",
			"value": "Defined in Create Customer (2)",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "Defined in Create Order (4)"
		},
		{
			"key": "paymentId",
			"value": "Defined in Get Payment By OrderId (5)",
			"type": "string"
		},
		{
			"key": "paid",
			"value": "true",
			"type": "string"
		},
		{
			"key": "completed",
			"value": "5",
			"type": "string"
		}
	]
}
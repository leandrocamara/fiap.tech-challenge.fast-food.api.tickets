name: Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Restore
        run: dotnet restore --locked-mode

      - name: Build
        run: dotnet build ./src/Drivers/API/API.csproj --configuration Release /clp:ErrorsOnly

      - name: Test
        run: dotnet test

  CD:
    needs: CI
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ vars.DOCKERHUB_USERNAME }}/fast-food-tickets-api:latest .

      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: docker push ${{ vars.DOCKERHUB_USERNAME }}/fast-food-tickets-api:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name ${{ vars.AWS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}

      - name: Replace Tokens
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '#{'
          tokenSuffix: '}#'
          files: '["kubernetes/configmap.yml", "kubernetes/secret.yml"]'
        env:
          # kubernetes/configmap.yml
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          # kubernetes/secret.yml
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Deploy to AWS EKS
        run: kubectl apply -f ./kubernetes/.
